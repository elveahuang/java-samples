server.port=8080
#
server.servlet.session.cookie.name=client-server
#
spring.security.oauth2.client.registration.client-with-authorization-code.client-id=webapp
spring.security.oauth2.client.registration.client-with-authorization-code.client-secret=webapp
spring.security.oauth2.client.registration.client-with-authorization-code.provider=authorization-server
spring.security.oauth2.client.registration.client-with-authorization-code.redirect-uri=http://127.0.0.1:8080/authorized
spring.security.oauth2.client.registration.client-with-authorization-code.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.client-with-authorization-code.scope=message.read,message.write
#
spring.security.oauth2.client.registration.client-with-client-credentials.client-id=webapp
spring.security.oauth2.client.registration.client-with-client-credentials.client-secret=webapp
spring.security.oauth2.client.registration.client-with-client-credentials.provider=authorization-server
spring.security.oauth2.client.registration.client-with-client-credentials.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.client-with-client-credentials.scope=message.read,message.write
#
spring.security.oauth2.client.provider.authorization-server.authorization-uri=http://127.0.0.1:8081/oauth2/authorize
spring.security.oauth2.client.provider.auth-server.token-uri=http://127.0.0.1:8081/oauth2/token
#
spring.thymeleaf.cache=false
#
logging.level.root=warn
logging.level.org.springframework=debug
logging.level.org.springframework.security=debug
logging.level.org.hibernate=error